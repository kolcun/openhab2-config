rule "Garage Sensor - Mike"
when
	Item MikeGarageSensor changed to OPEN
then
	pushover("Mike Garage Sensor - OPEN");
	logInfo("Garage","Mike - OPEN");
	frontdoorD.sendCommand(ON)
	frontdoofH.sendCommand(ON)
end

rule "Garage Sensor - Mike closed"
when
        Item MikeGarageSensor changed to CLOSED
then
        pushover("Mike Garage Sensor - CLOSED");
        logInfo("Garage","Mike - CLOSED");
	frontdoorD.sendCommand(OFF)
	frontdoorH.sendCommand(OFF)
end

rule "Garage Sensor - Diane"
when
        Item DianeGarageSensor changed to OPEN
then
        pushover("Diane Garage Sensor - OPEN");
        logInfo("Garage","Diane - OPEN");
	frontdoorC.sendCommand(ON)
	frontdoorG.sendCommand(ON)
end

rule "Garage Sensor - Diane closed"
when
        Item DianeGarageSensor changed to CLOSED
then
        pushover("Diane Garage Sensor - CLOSED");
        logInfo("Garage","Diane - CLOSED");
	frontdoorC.sendCommand(OFF)
	frontdoorG.sendCommand(OFF)
end


rule "test-switch-diane-on"
when 
        Item TestSwitchDiane changed to ON
then
        pushover("Switch-diane-on linked to C")
        frontdoorC.sendCommand(ON)
	logInfo("Garage", "Diane test switch ON")
end

rule "test-switch-diane-off"
when 
        Item TestSwitchDiane changed to OFF
then
        pushover("Switch-diane-off linked to C")
        frontdoorC.sendCommand(OFF)
	logInfo("Garage", "Diane test switch OFF")
end

rule "test-switch-mike-on"
when 
        Item TestSwitchMike changed to ON
then
        pushover("Switch-mike-on linked to D")
        frontdoorD.sendCommand(ON)
	logInfo("Garage", "Mike test switch ON")
end

rule "test-switch-mike-off"
when 
        Item TestSwitchMike changed to OFF
then
        pushover("Switch-mike-off linked to D")
        frontdoorD.sendCommand(OFF)
	logInfo("Garage", "Mike test switch OFF")
end


rule "frontdoorc-on"
when
        Item frontdoorC changed to ON
then
        pushover("C - on")
	logInfo("Garage","Keypad C - on")
	TestSwitchDiane.postUpdate(ON)
end

rule "frontdoorc-off"
when
        Item frontdoorC changed to OFF
then
        pushover("C - off")
	logInfo("Garage","Keypad C - off")
	TestSwitchDiane.postUpdate(OFF)
end

rule "frontdoord-on"
when
        Item frontdoorD changed to ON
then
        pushover("D - on")
	logInfo("Garage","Keypad D - on")
	testSwitchMike.postUpdate(ON)
end

rule "frontdoord-off"
when
        Item frontdoorD changed to OFF
then
        pushover("D - off")
	logInfo("Garage","Keypad D - off")
	testSwitchMike.postUpdate(OFF)
end


rule "sync as needed"
when
        Time cron "0 0/10 * 1/1 * ? *" // every 10 minutes
then
        if(MikeGarageSensor == CLOSED){
                // kaypad lights on? turn off
                if(frontdoorH == ON){
                        frontdoorH.sendCommand(OFF)
                        if(DebugSwitch.state == ON){
                                pushover("Mike Door Closed, but keypad on: turning off")
                        }
                }
        }
        if(MikeGarageSensor == OPEN){
                // keypad lights off? turn on
                if(frontdoorH == OFF){
                        frontdoorH.sendCommand(ON)
                        if(DebugSwitch.state == ON){
                                pushover("Mike Door Open, but keypad off: turning on")
                        }
                }
        }
/*

rule "Mike Garage Closed"
when 
	Item MikeGarageSensor changed to CLOSED
then
    frontdoorH.sendCommand(OFF)
    MikeGarage.postUpdate(OFF)
    Thread::sleep(250)
    frontdoorH.sendCommand(OFF)
    MikeGarage.postUpdate(OFF)
    pushover("Mike Garage Closed")
end

rule "Mike Garage Open"
when 
	Item MikeGarageSensor changed to OPEN
then
    frontdoorH.sendCommand(ON)
    MikeGarage.postUpdate(OFF)
    Thread::sleep(250)
    frontdoorH.sendCommand(ON)
    MikeGarage.postUpdate(OFF)
    pushover("Mike Garage Opened")
end

rule "Diane Garage Closed"
when 
	Item DianeGarageSensor changed to CLOSED
then
    frontdoorG.sendCommand(OFF)
    DianeGarage.postUpdate(OFF)
    Thread::sleep(250)
    frontdoorG.sendCommand(OFF)
    DianeGarage.postUpdate(OFF)
    pushover("Diane Garage Closed")
end

rule "Diane Garage Open"
when 
	Item DianeGarageSensor changed to OPEN
then
    frontdoorG.sendCommand(ON)
    DianeGarage.postUpdate(OFF)
    Thread::sleep(250)
    frontdoorG.sendCommand(ON)
    DianeGarage.postUpdate(OFF)
    pushover("Diane Garage Opened")
end


rule "10:30 off"
when 
    Time cron "0 0 21 1/1 * ? *"//9pm
then
    if(DianeGarageSensor.state == OPEN){
        pushover("9pm close Diane garage")
        DianeGarage.sendCommand(ON)
    }
    if(MikeGarageSensor.state == OPEN){
        pushover("9pm close Diane garage")
        MikeGarage.sendCommand(ON)
    }
end
*/
